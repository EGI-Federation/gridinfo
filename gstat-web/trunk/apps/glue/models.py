# GLUE 1.3 models

from django.db import models

class gluece(models.Model):
    uniqueid = models.CharField(max_length=255, blank=True, primary_key=True)
    name = models.CharField(max_length=255, blank=True)
    implementationname = models.CharField(max_length=255, blank=True)
    implementationversion = models.CharField(max_length=30, blank=True)
    capability = models.CharField(max_length=255, blank=True)
    contactstring = models.CharField(max_length=255, blank=True)
    lrmstype = models.CharField(max_length=255, blank=True)
    lrmsversion = models.CharField(max_length=255, blank=True)
    gramversion = models.CharField(max_length=30, blank=True)
    hostname = models.CharField(max_length=255, blank=True)
    gatekeeperport = models.CharField(max_length=255, blank=True)
    jobmanager = models.CharField(max_length=255, blank=True)
    totalcpus = models.CharField(max_length=255, blank=True)
    applicationdir = models.CharField(max_length=255, blank=True)
    datadir = models.CharField(max_length=255, blank=True)
    defaultse = models.CharField(max_length=255, blank=True)
    status = models.CharField(max_length=255, blank=True)
    runningjobs = models.CharField(max_length=255, blank=True)
    waitingjobs = models.CharField(max_length=255, blank=True)
    totaljobs = models.CharField(max_length=255, blank=True)
    estimatedresponsetime = models.CharField(max_length=255, blank=True)
    worstresponsetime = models.CharField(max_length=255, blank=True)
    freejobslots = models.CharField(max_length=255, blank=True)
    freecpus = models.CharField(max_length=255, blank=True)
    maxwallclocktime = models.CharField(max_length=255, blank=True)
    maxobtainablewallclocktime = models.CharField(max_length=255, blank=True)
    maxcputime = models.CharField(max_length=255, blank=True)
    maxobtainablecputime = models.CharField(max_length=255, blank=True)
    maxtotaljobs = models.CharField(max_length=255, blank=True)
    maxrunningjobs = models.CharField(max_length=255, blank=True)
    maxwaitingjobs = models.CharField(max_length=255, blank=True)
    priority = models.CharField(max_length=255, blank=True)
    assignedjobslots = models.CharField(max_length=255, blank=True)
    maxslotsperjob = models.CharField(max_length=255, blank=True)
    preemption = models.CharField(max_length=255, blank=True)
    hostingcluster = models.CharField(max_length=255, blank=True)
    glueclusteruniqueid = models.CharField(max_length=255, blank=True)
    updated_at = models.DateTimeField(auto_now=True)
    gluecluster_fk = models.CharField(max_length=255, blank=True)

class gluecesebind(models.Model):
    uniqueid = models.CharField(max_length=255, blank=True, primary_key=True)
    seuniqueid = models.CharField(max_length=255, blank=True)
    accesspoint = models.CharField(max_length=255, blank=True)
    mountinfo = models.CharField(max_length=255, blank=True)
    weight = models.CharField(max_length=255, blank=True)
    updated_at = models.DateTimeField(auto_now=True)
    gluecesebindgroup_fk = models.CharField(max_length=255, blank=True)

class gluecesebindgroup(models.Model):
    uniqueid = models.CharField(max_length=255, blank=True, primary_key=True)
    seuniqueid = models.CharField(max_length=255, blank=True)
    ceuniqueid = models.CharField(max_length=255, blank=True)
    updated_at = models.DateTimeField(auto_now=True)

class gluecluster(models.Model):
    uniqueid = models.CharField(max_length=255, blank=True, primary_key=True)
    name = models.CharField(max_length=255, blank=True)
    informationserviceurl = models.CharField(max_length=255, blank=True)
    tmpdir = models.CharField(max_length=255, blank=True)
    wntmpdir = models.CharField(max_length=255, blank=True)
    updated_at = models.DateTimeField(auto_now=True)
    gluesite_fk = models.CharField(max_length=255, blank=True)

class gluelocation(models.Model):
    localid = models.CharField(max_length=255, blank=True)
    name = models.CharField(max_length=255, blank=True)
    path = models.CharField(max_length=255, blank=True)
    version = models.CharField(max_length=255, blank=True)
    glueceuniqueid = models.CharField(max_length=255, blank=True)
    updated_at = models.DateTimeField(auto_now=True)
    gluesubcluster_fk = models.CharField(max_length=255, blank=True)

class gluemultivalued(models.Model):
    uniqueid = models.CharField(max_length=255, blank=True)
    localid = models.CharField(max_length=255, blank=True)
    attribute = models.CharField(max_length=255, blank=True)
    value = models.CharField(max_length=255, blank=True)
    updated_at = models.DateTimeField(auto_now=True)

class gluesa(models.Model):
    localid = models.CharField(max_length=255, blank=True)
    root = models.CharField(max_length=255, blank=True)
    path = models.CharField(max_length=255, blank=True)
    type = models.CharField(max_length=255, blank=True)
    name = models.CharField(max_length=255, blank=True)
    totalonlinesize = models.CharField(max_length=255, blank=True)
    usedonlinesize = models.CharField(max_length=255, blank=True)
    freeonlinesize = models.CharField(max_length=255, blank=True)
    reservedonlinesize = models.CharField(max_length=255, blank=True)
    totalnearlinesize = models.CharField(max_length=255, blank=True)
    usednearlinesize = models.CharField(max_length=255, blank=True)
    freenearlinesize = models.CharField(max_length=255, blank=True)
    reservednearlinesize = models.CharField(max_length=255, blank=True)
    retentionpolicy = models.CharField(max_length=150, blank=True)
    accesslatency = models.CharField(max_length=150, blank=True)
    expirationmode = models.CharField(max_length=240, blank=True)
    maxfilesize = models.CharField(max_length=255, blank=True)
    minfilesize = models.CharField(max_length=255, blank=True)
    maxdata = models.CharField(max_length=255, blank=True)
    maxnumfiles = models.CharField(max_length=255, blank=True)
    maxpinduration = models.CharField(max_length=255, blank=True)
    quota = models.CharField(max_length=255, blank=True)
    filelifetime = models.CharField(max_length=255, blank=True)
    availablespace = models.CharField(max_length=255, blank=True)
    usedspace = models.CharField(max_length=255, blank=True)
    glueseuniqueid = models.CharField(max_length=255, blank=True)
    updated_at = models.DateTimeField(auto_now=True)
    gluese_fk = models.CharField(max_length=255, blank=True)

class gluese(models.Model):
    uniqueid = models.CharField(max_length=255, blank=True, primary_key=True)
    name = models.CharField(max_length=255, blank=True)
    architecture = models.CharField(max_length=255, blank=True)
    sizetotal = models.CharField(max_length=255, blank=True)
    sizefree = models.CharField(max_length=255, blank=True)
    informationserviceurl = models.CharField(max_length=255, blank=True)
    port = models.CharField(max_length=255, blank=True)
    currentioload = models.CharField(max_length=255, blank=True)
    implementationname = models.CharField(max_length=255, blank=True)
    implementationversion = models.CharField(max_length=255, blank=True)
    status = models.CharField(max_length=255, blank=True)
    totalonlinesize = models.CharField(max_length=189, blank=True)
    totalnearlinesize = models.CharField(max_length=189, blank=True)
    usedonlinesize = models.CharField(max_length=189, blank=True)
    usednearlinesize = models.CharField(max_length=189, blank=True)
    type = models.CharField(max_length=255, blank=True)
    updated_at = models.DateTimeField(auto_now=True)
    gluesite_fk = models.CharField(max_length=255, blank=True)

class glueseaccessprotocol(models.Model):
    localid = models.CharField(max_length=255, blank=True)
    endpoint = models.CharField(max_length=255, blank=True)
    type = models.CharField(max_length=255, blank=True)
    version = models.CharField(max_length=189, blank=True)
    port = models.CharField(max_length=255, blank=True)
    accesstime = models.CharField(max_length=255, blank=True)
    maxstreams = models.CharField(max_length=255, blank=True)
    glueseuniqueid = models.CharField(max_length=255, blank=True)
    updated_at = models.DateTimeField(auto_now=True)
    gluese_fk = models.CharField(max_length=255, blank=True)

class gluesecontrolprotocol(models.Model):
    localid = models.CharField(max_length=255, blank=True)
    endpoint = models.CharField(max_length=255, blank=True)
    type = models.CharField(max_length=255, blank=True)
    version = models.CharField(max_length=255, blank=True)
    glueseuniqueid = models.CharField(max_length=255, blank=True)
    updated_at = models.DateTimeField(auto_now=True)
    gluese_fk = models.CharField(max_length=255, blank=True)

class gluesl(models.Model):
    uniqueid = models.CharField(max_length=255, blank=True, primary_key=True)
    glueseuniqueid = models.CharField(max_length=255, blank=True)
    name = models.CharField(max_length=255, blank=True)
    architecturetype = models.CharField(max_length=255, blank=True)
    updated_at = models.DateTimeField(auto_now=True)
 
class glueservice(models.Model):
    uniqueid = models.CharField(max_length=255, blank=True, primary_key=True)
    name = models.CharField(max_length=255, blank=True)
    type = models.CharField(max_length=255, blank=True)
    version = models.CharField(max_length=60, blank=True)
    endpoint = models.CharField(max_length=255, blank=True)
    wsdl = models.CharField(max_length=255, blank=True)
    semantics = models.CharField(max_length=255, blank=True)
    accesspointurl = models.CharField(max_length=255, blank=True)
    starttime = models.CharField(max_length=120, blank=True)
    owner = models.CharField(max_length=255, blank=True)
    uri = models.CharField(max_length=255, blank=True)
    status = models.CharField(max_length=60, blank=True)
    statusinfo = models.CharField(max_length=255, blank=True)
    updated_at = models.DateTimeField(auto_now=True)
    gluesite_fk = models.CharField(max_length=255, blank=True)
 
class glueservicedata(models.Model):
    glueserviceuniqueid = models.CharField(max_length=255, blank=True)
    datakey = models.CharField(max_length=255, blank=True)
    datavalue = models.CharField(max_length=255, blank=True)
    updated_at = models.DateTimeField(auto_now=True)
    glueservice_fk = models.CharField(max_length=255, blank=True)

class gluesite(models.Model):
    uniqueid = models.CharField(max_length=255, blank=True, primary_key=True)
    name = models.CharField(max_length=255, blank=True)
    description = models.CharField(max_length=255, blank=True)
    emailcontact = models.CharField(max_length=255, blank=True)
    sysadmincontact = models.CharField(max_length=255, blank=True)
    usersupportcontact = models.CharField(max_length=255, blank=True)
    securitycontact = models.CharField(max_length=255, blank=True)
    location = models.CharField(max_length=255, blank=True)
    latitude = models.FloatField(null=True, blank=True)
    longitude = models.FloatField(null=True, blank=True)
    web = models.CharField(max_length=255, blank=True)
    updated_at = models.DateTimeField(auto_now=True)

class gluesoftware(models.Model):
    modulename = models.CharField(max_length=255, blank=True)
    localid = models.CharField(max_length=255, blank=True)
    environmentsetup = models.CharField(max_length=255, blank=True)
    version = models.CharField(max_length=255, blank=True)
    installedroot = models.CharField(max_length=255, blank=True)
    name = models.CharField(max_length=255, blank=True)
    glueceuniqueid = models.CharField(max_length=255, blank=True)
    updated_at = models.DateTimeField(auto_now=True)
    gluesubcluster_fk = models.CharField(max_length=255, blank=True)

class gluesubcluster(models.Model):
    uniqueid = models.CharField(max_length=255, blank=True, primary_key=True)
    name = models.CharField(max_length=255, blank=True)
    glueclusteruniqueid = models.CharField(max_length=255, blank=True)
    mainmemoryramsize = models.CharField(max_length=255, blank=True)
    ramavailable = models.CharField(max_length=255, blank=True)
    mainmemoryvirtualsize = models.CharField(max_length=255, blank=True)
    virtualavailable = models.CharField(max_length=255, blank=True)
    architectureplatformtype = models.CharField(max_length=255, blank=True)
    architecturesmpsize = models.CharField(max_length=255, blank=True)
    operatingsystemname = models.CharField(max_length=255, blank=True)
    operatingsystemrelease = models.CharField(max_length=255, blank=True)
    operatingsystemversion = models.CharField(max_length=255, blank=True)
    processorvendor = models.CharField(max_length=255, blank=True)
    processormodel = models.CharField(max_length=255, blank=True)
    processorclockspeed = models.CharField(max_length=255, blank=True)
    processorinstructionset = models.CharField(max_length=255, blank=True)
    # otherprocessordescription was the original name in the database
    processorotherdescription = models.CharField(max_length=255, blank=True)
    cachel1 = models.CharField(max_length=255, blank=True)
    cachel1i = models.CharField(max_length=255, blank=True)
    cachel1d = models.CharField(max_length=255, blank=True)
    cachel2 = models.CharField(max_length=255, blank=True)
    benchmarksf00 = models.CharField(max_length=255, blank=True)
    benchmarksi00 = models.CharField(max_length=255, blank=True)
    networkadapterinboundip = models.CharField(max_length=48, blank=True)
    networkadapteroutboundip = models.CharField(max_length=48, blank=True)
    physicalcpus = models.CharField(max_length=255, blank=True)
    logicalcpus = models.CharField(max_length=255, blank=True)
    tmpdir = models.CharField(max_length=255, blank=True)
    wntmpdir = models.CharField(max_length=255, blank=True)
    updated_at = models.DateTimeField(auto_now=True)
    gluecluster_fk = models.CharField(max_length=255, blank=True)

class gluevoinfo(models.Model):
    glueseuniqueid = models.CharField(max_length=255, blank=True)
    localid = models.CharField(max_length=255, blank=True)
    name = models.CharField(max_length=255, blank=True)
    path = models.CharField(max_length=255, blank=True)
    tag = models.CharField(max_length=255, blank=True)
    updated_at = models.DateTimeField(auto_now=True)
    gluesa_fk = models.CharField(max_length=255, blank=True)
    # gluese_fk is not part of the official schema.
    gluese_fk = models.CharField(max_length=255, blank=True)

class gluevoview(models.Model):
    glueceuniqueid = models.CharField(max_length=255, blank=True)
    localid = models.CharField(max_length=255, blank=True)
    runningjobs = models.CharField(max_length=255, blank=True)
    waitingjobs = models.CharField(max_length=255, blank=True)
    totaljobs = models.CharField(max_length=255, blank=True)
    freejobslots = models.CharField(max_length=255, blank=True)
    estimatedresponsetime = models.CharField(max_length=255, blank=True)
    worstresponsetime = models.CharField(max_length=255, blank=True)
    defaultse = models.CharField(max_length=255, blank=True)
    applicationdir = models.CharField(max_length=255, blank=True)
    datadir = models.CharField(max_length=255, blank=True)
    freecpus = models.CharField(max_length=255, blank=True)
    assignedjobslots = models.CharField(max_length=255, blank=True) # New field
    updated_at = models.DateTimeField(auto_now=True)
    gluece_fk = models.CharField(max_length=255, blank=True)

#!/usr/bin/python
##############################################################################
# Copyright (c) Members of the EGEE Collaboration. 2004.
# See http://www.eu-egee.org/partners/ for details on the copyright
# holders.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at #
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS
# OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##############################################################################
#
# NAME :        gstat-update-rrd
#
# DESCRIPTION : This script updates the rrd from the snapshot database
#
# AUTHORS :     Laurence.Field@cern.ch
#
# EXAMPLE :     ./gstat-update-rrd
#
##############################################################################

import os
import sys
import time
DIR = os.path.dirname(__file__)
APPS_DIR = os.path.join(DIR, '..','apps')
sys.path.append(APPS_DIR)
os.environ['DJANGO_SETTINGS_MODULE']='core.settings'
from topology.models import Entity
from glue.models import gluese

modulename='topology.models'
__import__(modulename)
module=sys.modules[modulename]

data_dir='/var/cache/gstat/rrd'

se_data_dir='%s/SE' %(data_dir)
if ( not os.path.exists(se_data_dir) ):
    os.makedirs(se_data_dir)

objects = gluese.objects.all()

se_list = {}
for object in objects:
    if ( not se_list.has_key(object.uniqueid)):
        se_unique_data_dir='%s/%s' %(se_data_dir, object.uniqueid)
        if ( not os.path.exists(se_unique_data_dir) ):
            os.makedirs(se_unique_data_dir)
        for type in ['totalonlinesize',
                     'usedonlinesize',
                     'totalnearlinesize',
                     'usednearlinesize']:
            se_data_file = '%s/%s.rrd' %(se_unique_data_dir, type)
            if ( not os.path.exists(se_data_file) ):
                #Create RRD file is it does not exists
                create_cmd = "rrdtool create "+se_data_file+\
                         " DS:"+type+":GAUGE:600:U:U"+\
                         " RRA:AVERAGE:0.5:1:1000"+\
                         " RRA:AVERAGE:0.5:6:1000"+\
                         " RRA:AVERAGE:0.5:24:1000"+\
                         " RRA:AVERAGE:0.5:288:1000"
                os.system(create_cmd)
        
            #Store RRD data
            data=object.__getattribute__(type)
            if (data == "unset" or data == ""):
                data = "0"
            update_cmd = "rrdtool update %s N:%s" %(se_data_file,data)
            os.system(update_cmd)
            se_list[object.uniqueid]=None


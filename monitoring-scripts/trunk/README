
Monitoring scripts
------------------

This SVN module contains a set of scripts used in the WLCG Monitoring Dashboard to generate metrics related to BDII
and GLUE deployment .

For more information on how to write metrics for the WLCG Monitoring Dashboard, please check:
https://twiki.cern.ch/twiki/bin/view/ArdaGrid/SiteStatusBoard

The scripts are run locally in AFS by user "malandes" using acrontab:

0 6 * * * lxplus.cern.ch /afs/cern.ch/user/m/malandes/infosys/ssb/cron-wlcg-glue2-monitoring
15 6 * * * lxplus.cern.ch /afs/cern.ch/user/m/malandes/infosys/ssb/cron-lhcb-glue2-monitoring
30 6 * * * lxplus.cern.ch /afs/cern.ch/user/m/malandes/infosys/ssb/cron-lhcb-storage-monitoring
45 6 * * * lxplus.cern.ch /afs/cern.ch/user/m/malandes/infosys/ssb/monitoring/glue-deployment.py
0 7 * * * lxplus.cern.ch /afs/cern.ch/user/m/malandes/infosys/ssb/monitoring/bdii-deployment.py
15 7 * * * lxplus.cern.ch /afs/cern.ch/user/m/malandes/infosys/ssb/cron-atlas-endpoint-monitoring
30 23 * * * lxplus.cern.ch /afs/cern.ch/user/m/malandes/infosys/ssb/cron-atlas-storage-monitoring

Results to be consumed by the Dashboard are written to the web space of user "malandes" 
under /afs/cern.ch/user/m/malandes/www/web/ssb and organised in different folders as follows:

*IMPORTANT NOTE*: Note that the output file to be used by the Dashboard could be changed to any other directory 
                  as long as both the scripts and the Dashboard configuration are updated to write/read the data to/from 
                  the new location.
   
  - /bdii: BDII related metrics. Dashboard URL: 
    - https://wlcg-mon/dashboard/request.py/siteview#currentView=BDII+deployment 

  - /general: GLUE and Storage deployment metrics. Dashboard URL: 
    - https://wlcg-mon/dashboard/request.py/siteview#currentView=Glue+Deployment
    - https://wlcg-mon/dashboard/request.py/siteview#currentView=Glue+Deployment+per+site
    - https://wlcg-mon/dashboard/request.py/siteview#currentView=Storage+Deployment

  - /lhcb: LHCb related metrics. Dashboard URL: 
    - https://wlcg-mon/dashboard/request.py/siteview#currentView=Glue+Validator+LHCb 
    - https://wlcg-mon/dashboard/request.py/siteview#currentView=BDII+vs+SRM+LHCb+Storage

  - /atlas: ATLAS related metrcis. Dashboard URL:
    - https://wlcg-mon/dashboard/request.py/siteview#currentView=BDII+monitoring+for+ATLAS
    - https://wlcg-mon.cern.ch/dashboard/request.py/siteview#currentView=BDII+vs+SRM+ATLAS+Storage

  - /wlcg: WLCG related metrics. Dashboard URL:
    - https://wlcg-mon/dashboard/request.py/siteview#currentView=Glue+Validator+WLCG
    - https://wlcg-mon/dashboard/request.py/siteview#currentView=WLCG+Accounting+vs+BDII
    - http://wlcg-mon.cern.ch/dashboard/request.py/siteview#currentView=T1+Storage+Deployment
    - http://wlcg-mon.cern.ch/dashboard/request.py/siteview#currentView=WLCG+Operations

The scripts are organised as follows:

- cron-wlcg-glue2-monitoring : cron job to launch the list of scripts generating WLCG and GLUE 2 related metrics,
  GLUE 1 and 2 deployment per REBUS site metrics and GGUS tickets opened by COD operations. It also generates
  metrics for storage services (DPM, dCache, StoRM, Castor and EOS) and T1 storage

- cron-lhcb-glue2-monitoring: cron job to launch the list of scripts generating GLUE 2 LHCb metrics

- cron-lhcb-storage-monitoring: cron job to launch the BDII vs SRM monitoring for LHCb

- cron-atlas-endpoint-monitoring: cron job to monitor xroot and http endpoints for ATLAS

- cron-atlas-storage-monitoring: cron job to launch the BDII vs SRM monitoring for ATLAS

- /ggus: Folder containing scripts to handle GGUS tickets automatic creation
   - ggus_monitor.py: Script generating the output needed by the Dashboard with the list of GGUS tickets
   - ggus_suds.py: Script to contact the GGUS web service using SOAP
   - ggus_templates.py: Library containing the template information for automatic GGUS creation 

- /monitoring: Folder containing the scripts that will generate the output needed by the Dashboard for the different metrics
   - bdii-deployment.py: metrics related to top and site BDII versions and number of endpoints published in GLUE 2 
   - glue-deployment.py: metrics related to GLUE 1 and GLUE 2 numbers (number of DNs, endpoints, services, etc)
   - glue-deployment-per-site.py: metrics related to GLUE 1 and GLUE 2 numbers per REBUS sites
   - lhcb-glue2-monitoring.py: GLUE 2 validation metrics for LHCb sites
   - wlcg-glue2-monitoring.py: GLUE 2 validation metrics for sites listed in REBUS
   - storage-deployment.py: GLUE 1 and GLUE 2 storage metrics for DPM, dCache, StoRM, Castor and EOS

- /specific_actions: Folder containing VO specific metrics or general metrics tagetting a specific validation objective:
   - lhcb-maxCPUTime-monitoring.py: metric to monitor the Max CPU Time published by LHCb queues in GLUE 2. 
     Automatic GGGUS ticket creation disabled after GLUE validator Nagios probe in production

   - lhcb-storage-monitoring.py: metric to compare BDII vs SRM storage capacity numbers (GLUE 2 where published)

   - atlas-endpoint-monitoring.py: metric to list the number of xroot and http endpoints (GLUE 1 and GLUE 2) 
     published in ATLAS sites

   - atlas-storage-monitoring.py: metric to compare BDII vs SRM storage capacity numbers (GLUE 1)

   - obsolete_entries.py: metric to monitor obsolete entries published in GLUE 2. Disabled after GLUE validator Nagios probe
     in production

   - waiting_jobs.py: metric to monitor 444444 waiting jobs in GLUE 2. Automatic GGUS ticke creation disabled after 
     GLUE validator Nagios probe in production

   - nagios_ggus.py: metric to track GGUS tickets opened by COD Operations for the GLUE validator Nagios probe

   - wlcg-accounting.py : script to compare installed capacities reported at the WLCG Accounting report with BDII and REBUS
     numbers

   - t1-accounting: metric to monitor storage types, versions and supported VOs in T1s 

   - operations_ggus: metric to track GGUS tickets opened by WLCG Operations. Note that this metric is not yet executed
     as part of any cron job yet. 

- /utils: Folder containing useful utilities used by the other scripts
   - glue2-monitor.py: script running glue-validator for a specific site 
   - sites.py: library containing the list of sites and site bdiis 
   - create_html.py: script generating the html files used for historic information. This script needs to be run once
     when a new metric is introduced and its historic data needs to be stored. It has to be adapted for the metric using
     the correct list of sites. 

GGUS color legend
------------------

The following color legend is used in the metrics that are tracking open/closed GGUS tickets:

- GREY: Problem with GGUS. Either GGUS couldn't be contacted or couldn't create a ticket
- GREEN: There is no ticket for the site
- ORANGE: A ticket has just been opened for the site. Since GGUS metrics normally run once per day, orange means the ticket was opened since the last time the metric was executed
- RED: A ticket is in status open for a site
- YELLOW: A ticket is in status closed for a site  


Requisites
----------

- glue-validator: the glue-validator command needs to be installed in the machine where the scripts are running. The absolute path is declared inside the *-glue2-monitoring scripts.  

- suds python library: this library is used to communicate with the GGUS web service which exposes a SOAP WSDL file. 
The version that it is currenly used is 0.4.1.

- Contact GGUS developers to be able to use the production instance of the GGUS service.




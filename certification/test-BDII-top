#!/bin/bash
# ./test-BDII-top 2>&1 | tee test.log

command="ldapsearch -LLL -x -h $(hostname -f) -p 2170 "
bind="-b mds-vo-name=resource,o=grid "

${command} ${bind}

RETVAL=0

echo -n "Testing the publication of service entry at resource-level: "
filter="(&(objectClass=GlueService)(GlueServiceType=bdii_top)) GlueServiceUniqueID"
${command} ${bind} ${filter} | grep "$(hostname -f)" >/dev/null 2>/dev/null
if [ $? -gt 0 ]; then
    echo "FAIL"
    RETVAL=1
else
    echo "OK"
fi 

echo -n "Testing the publication of service entry at resource-level: "
filter="(&(objectClass=GlueService)(GlueServiceType=bdii_top)) GlueServiceUniqueID"
${command} ${bind} ${filter} | grep "$(hostname -f)" >/dev/null 2>/dev/null
if [ $? -gt 0 ]; then
    echo "FAIL"
    RETVAL=1
else
    echo "OK"
fi 

echo -n "Testing the publication of glite-info-service_version entry at resource-level: "
filter="(&(objectClass=GlueServiceData)(GlueServiceDataKey=glite-info-service_version)) GlueServiceDataKey"
${command} ${bind} ${filter} | grep "glite-info-service_version" >/dev/null 2>/dev/null
if [ $? -gt 0 ]; then
    echo "FAIL"
    RETVAL=1
else
    echo "OK"
fi 

echo -n "Testing the publication of glite-info-service_hostname entry at resource-level: "
filter="(&(objectClass=GlueServiceData)(GlueServiceDataKey=glite-info-service_hostname)) GlueServiceDataKey"
${command} ${bind} ${filter} | grep "glite-info-service_hostname" >/dev/null 2>/dev/null
if [ $? -gt 0 ]; then
    echo "FAIL"
    RETVAL=1
else
    echo "OK"
fi 

echo -n "Testing the publication of metapackage_glite-BDII_top entry at resource-level: "
filter="(&(objectClass=GlueServiceData)(GlueServiceDataKey=metapackage_glite-BDII_top)) GlueServiceDataKey"
${command} ${bind} ${filter} | grep "metapackage_glite-BDII_top" >/dev/null 2>/dev/null
if [ $? -gt 0 ]; then
    echo "FAIL"
    RETVAL=1
else
    echo "OK"
fi 

bind="-b GLUE2GroupID=resource,o=glue "

echo -n "Testing the publication of GLUE2 service entry at resource-level: "
filter="(&(objectClass=GLUE2Service)(GLUE2ServiceType=bdii_top)) GLUE2ServiceID"
${command} ${bind} ${filter} | grep "$(hostname -f)" >/dev/null 2>/dev/null
if [ $? -gt 0 ]; then
    echo "FAIL"
    RETVAL=1
else
    echo "OK"
fi 

echo -n "Testing the publication of GLUE2 endpoint entry at resource-level: "
filter="(&(objectClass=GLUE2Endpoint)(GLUE2EndpointInterfaceName=bdii_top)) GLUE2EndpointID"
${command} ${bind} ${filter} | grep "$(hostname -f)" >/dev/null 2>/dev/null
if [ $? -gt 0 ]; then
    echo "FAIL"
    RETVAL=1
else
    echo "OK"
fi 

echo -n "Testing the publication of GLUE2 policy entry at resource-level: "
filter="(&(objectClass=GLUE2Policy)(GLUE2PolicyScheme=org.glite.standard)) GLUE2PolicyScheme"
${command} ${bind} ${filter} | grep "standard" >/dev/null 2>/dev/null
if [ $? -gt 0 ]; then
    echo "FAIL"
    RETVAL=1
else
    echo "OK"
fi 

echo -n "Checking site query for top-level BDII ... "
bind="-b mds-vo-name=local,o=grid"
filter='(objectClass=GlueSite)'
${command} ${bind} "${filter}" | grep GlueSiteName >/dev/null 2>/dev/null
if [ $? -gt 0 ]; then
    echo "FAIL"
    RETVAL=1
else
    echo "OK"
fi 

echo -n "Checking site query for top-level BDII for GLUE 2.0 ... "
bind=" -b o=glue"
filter='(objectClass=GLUE2AdminDomain)'
${command} ${bind} "${filter}" | grep GLUE2AdminDomain >/dev/null 2>/dev/null
if [ $? -gt 0 ]; then
    echo "FAIL"
    RETVAL=1
else
    echo "OK"
fi 


if [ ${RETVAL} -eq 1 ]; then
    echo "Test Failed"
    exit 1
else
    echo "Test Passed"
    exit 0
fi

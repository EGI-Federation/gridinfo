#!/usr/bin/env python

import logging
import sys
import glue2.utils

if __name__ == "__main__":
    config = glue2.utils.parse_options()
    log = logging.getLogger(sys.argv[0])
    hdlr = logging.StreamHandler(sys.stderr)
    formatter = logging.Formatter('[%(levelname)s]: %(message)s')
    hdlr.setFormatter(formatter)
    log.addHandler(hdlr)
    log.setLevel(config['debug'])

    if config.has_key('file'):
      source = "file://%s" % (config['file'])
    if config.has_key('host'):
      source = "ldap://%s:%s/%s?filter=%s" % (config['host'], config['port'], config['bind'], filter)

    ldif = glue2.utils.fast_read_ldif(source)
    dns_dict = glue2.utils.get_dns(ldif)
    for dn in dns_dict:
      entry = ldif[dns_dict[dn][0]:dns_dict[dn][1]].strip()
      entry = glue2.utils.convert_entry(entry)
      for object_class in entry['objectClass']:
          object_class = object_class.lower()[5:]
          if object_class in glue2.OBJECTS:
              module = sys.modules['glue2']
              inst = getattr(module, object_class)
              inst.validate(entry, log)
